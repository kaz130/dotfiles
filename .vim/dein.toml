[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# [[plugins]]
# repo = 'altercation/vim-colors-solarized'
# hook_add = '''
#     set background=dark
#     colorscheme solarized
# '''

# [[plugins]]
# repo = 'nanotech/jellybeans.vim'
# hook_add = '''
#     colorscheme jellybeans
# '''

# [[plugins]]
# repo = 'w0ng/vim-hybrid'
# hook_add = '''
#     set background=dark
#     colorscheme hybrid
# '''

[[plugins]]
repo = 'jpo/vim-railscasts-theme'
hook_add = '''
    colorscheme railscasts
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
hook_add = '''
    " vimfilerをデフォルトのファイラーにする
    let g:vimfiler_as_default_explorer = 1
    " セーフモードを無効する
    let g:vimfiler_safe_mode_by_default = 0
    " 自動でカレントディレクトリを変更する
    let g:vimfiler_enable_auto_cd = 1

    noremap <Space>.v :<C-u>edit ~/.vim/<CR>
    if has('mac')
        autocmd FileType vimfiler noremap <buffer> <Space>o
        \ :call system('open '.vimfiler#get_status_string())<CR>
    endif
    '''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/plugins/lightline.vim'

[[plugins]]
repo = 'cocopon/lightline-hybrid.vim'

[[plugins]]
repo = 'thinca/vim-template'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
hook_add = '''
    let g:neocomplete#enable_at_startup = 1
    let g:neocomplete#enable_smart_case = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
    " Plugin key-mappings.
    " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
    imap <C-k>     <Plug>(neosnippet_expand_or_jump)
    smap <C-k>     <Plug>(neosnippet_expand_or_jump)
    xmap <C-k>     <Plug>(neosnippet_expand_target)

    " SuperTab like snippets behavior.
    " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
    imap <C-k>     <Plug>(neosnippet_expand_or_jump)
    "imap <expr><TAB>
    " \ pumvisible() ? "\<C-n>" :
    " \ neosnippet#expandable_or_jumpable() ?
    " \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    " For conceal markers.
    if has('conceal')
    set conceallevel=2 concealcursor=niv
    endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'lambdalisue/vim-gita'

[[plugins]]
repo = 'thinca/vim-localrc'

